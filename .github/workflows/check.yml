name: Check

on: pull_request

jobs:
  check:
    name: windows-latest - stable
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v1.0.0
        with:
          fetch-depth: 1
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
      - uses: hecrj/setup-rust-action@v1.0.2
        with:
          rust-version: stable
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
      - name: Build
        run: cargo build --verbose
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
      - name: Lint
        run: cargo clippy --all-targets --all-features -- -D warnings
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
      - name: Test
        run: cargo test --verbose
        if: github.event.action == 'opened' || github.event.action == 'synchronize'
  standardize:
    name: Standardize
    needs: check
    runs-on: ubuntu-latest
    steps:
      - name: Dump
        env:
          MERGEABLE: ${{ github.event.pull_request.mergeable }}
          MERGEABLE_STATE: ${{ github.event.pull_request.mergeable_state }}
        run: echo "$MERGABLE" && echo "MERGEABLE_STATE"
      - uses: actions/checkout@v1.0.0
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          fetch-depth: 1
      - name: Install cargo-readme
        run: cargo install cargo-readme
      - name: Format
        run: cargo fmt
      - name: Update README
        run: cargo readme > README.md
      - uses: stefanzweifel/git-auto-commit-action@v1.0.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COMMIT_MESSAGE: 'Standardize changes'
          COMMIT_AUTHOR_EMAIL: 'justinsimerly1992@gmail.com'
          COMMIT_AUTHOR_NAME: 'Justin Simerly'
        if: contains(github.event.pull_request.labels.*.name, 'ready')
  #merge:
  #  name: Merge
  #  needs: standardize
  #  runs-on: ubuntu-latest
  #  steps:
